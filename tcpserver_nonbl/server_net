// package main

// import (
// 	"fmt"
// 	"net"
// 	"time"
// )

// func handler(conn net.Conn) {
// 	//recv := make([]byte, 4096)

// 	for {
// 		// n, err := conn.Read(recv)
// 		// if err != nil {
// 		// 	if err == io.EOF {
// 		// 		fmt.Println("connection is closed from client : ", conn.RemoteAddr().String())
// 		// 	}
// 		// 	fmt.Println("Failed to receive data : ", err)
// 		// 	break
// 		// }

// 		// if n > 0 {
// 		// 	message := []byte("Hello, server!")
// 		// 	conn.Write(message)
// 		// }

// 		message := []byte("Hello, server!")
// 		conn.Write(message)
// 		time.Sleep(time.Millisecond * 2000)
// 	}
// }

// func main() {
// 	l, err := net.Listen("tcp", ":23000")
// 	if err != nil {
// 		fmt.Println("Failed to Listen : ", err)
// 	}
// 	defer l.Close()

// 	for {
// 		conn, err := l.Accept()
// 		if err != nil {
// 			fmt.Println("Failed to Accept : ", err)
// 			continue
// 		}

// 		fmt.Printf("Accept client \n")
// 		fmt.Println("Accept client : ", conn.RemoteAddr().String())

// 		go handler(conn)
// 	}
// }
